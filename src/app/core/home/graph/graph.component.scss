/* graph.component.scss */

:root {
  --square-size: 15px;
  --square-gap: 5px;
  --week-width: calc(var(--square-size) + var(--square-gap));
}

.graph {
  display: inline-grid;
  grid-template-areas:
    "empty months"
    "days squares";
  grid-template-columns: auto 1fr;
  grid-gap: 10px;
  padding: 20px;
  border: 1px #e1e4e8 solid;
  margin: 20px;
}

.months,
.days,
.squares {
  display: grid;
}

.months {
  grid-area: months;
  grid-template-columns:
    calc(var(--week-width) * 4) /* Jan */
    calc(var(--week-width) * 4); /* Feb */
  /* ... other months */
}

.days {
  grid-area: days;
  grid-gap: var(--square-gap);
  grid-template-rows: repeat(7, var(--square-size));
}

.squares {
  grid-area: squares;
  grid-gap: var(--square-gap);
  grid-template-rows: repeat(7, var(--square-size));
  grid-auto-flow: column;
  grid-auto-columns: var(--square-size);
}

.months li,
.days li {
  text-align: center;
}

.squares li {
  background-color: #ebedf0;
}

.squares li[data-level="1"] {
  background-color: #c6e48b;
}

.squares li[data-level="2"] {
  background-color: #7bc96f;
}

.squares li[data-level="3"] {
  background-color: #196127;
}

// Additional styles using SCSS features
.days li:nth-child(odd) {
  visibility: hidden;
}

// Using SCSS variables and nesting
$square-color-levels: (
  1: #c6e48b,
  2: #7bc96f,
  3: #196127,
);

.squares li {
  @for $i from 1 through 3 {
    [data-level="#{$i}"] {
      background-color: map-get($square-color-levels, $i);
    }
  }
}
