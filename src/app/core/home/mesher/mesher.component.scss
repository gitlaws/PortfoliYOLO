// Base container
.mesher-canvas {
  position: absolute;
  inset: 0;
  z-index: 0;
  pointer-events: none;
  overflow: hidden;
  isolation: isolate;

  contain: layout style paint;
  will-change: background-position;
  transform: translateZ(0);
}

// Background layer with mesh gradients
.mesh-background {
  position: absolute;
  inset: 0;
  opacity: 1;
  transition: opacity 0.3s ease;
}

// Optional overlay for additional effects
.mesh-overlay {
  position: absolute;
  inset: 0;
  opacity: 0.1;
  mix-blend-mode: overlay;
  pointer-events: none;
}

// Optimized CSS Custom Properties
:root {
  // Primary gradient positions
  --mesh-x1: 20%;
  --mesh-y1: 30%;
  --mesh-x2: 80%;
  --mesh-y2: 70%;
  --mesh-x3: 60%;
  --mesh-y3: 20%;
  --mesh-x4: 30%;
  --mesh-y4: 80%;
  --mesh-x5: 90%;
  --mesh-y5: 40%;

  // Gradient sizes
  --mesh-size1: 40vmax;
  --mesh-size2: 35vmax;
  --mesh-size3: 30vmax;
  --mesh-size4: 45vmax;
  --mesh-size5: 38vmax;
}

// Light theme optimized
.mesher-canvas.light {
  .mesh-background {
    background: radial-gradient(
        circle var(--mesh-size1) at var(--mesh-x1) var(--mesh-y1),
        hsla(217, 100%, 50%, 0.08) 0%,
        transparent 70%
      ),
      radial-gradient(
        circle var(--mesh-size2) at var(--mesh-x2) var(--mesh-y2),
        hsla(156, 100%, 45%, 0.06) 0%,
        transparent 70%
      ),
      radial-gradient(
        circle var(--mesh-size3) at var(--mesh-x3) var(--mesh-y3),
        hsla(280, 60%, 50%, 0.05) 0%,
        transparent 70%
      ),
      radial-gradient(
        circle var(--mesh-size4) at var(--mesh-x4) var(--mesh-y4),
        hsla(45, 100%, 65%, 0.04) 0%,
        transparent 70%
      ),
      radial-gradient(
        circle var(--mesh-size5) at var(--mesh-x5) var(--mesh-y5),
        hsla(200, 100%, 60%, 0.07) 0%,
        transparent 70%
      );

    background-color: hsl(0, 0%, 98%);
    animation: lightMeshFlow 25s ease-in-out infinite alternate;
  }

  .mesh-overlay {
    background: linear-gradient(
      135deg,
      hsla(0, 0%, 100%, 0.02) 0%,
      hsla(217, 50%, 80%, 0.01) 100%
    );
  }
}

// Dark theme optimized
.mesher-canvas.dark {
  .mesh-background {
    background: radial-gradient(
        circle var(--mesh-size1) at var(--mesh-x1) var(--mesh-y1),
        hsla(217, 100%, 60%, 0.2) 0%,
        transparent 70%
      ),
      radial-gradient(
        circle var(--mesh-size2) at var(--mesh-x2) var(--mesh-y2),
        hsla(180, 100%, 50%, 0.15) 0%,
        transparent 70%
      ),
      radial-gradient(
        circle var(--mesh-size3) at var(--mesh-x3) var(--mesh-y3),
        hsla(280, 70%, 60%, 0.12) 0%,
        transparent 70%
      ),
      radial-gradient(
        circle var(--mesh-size4) at var(--mesh-x4) var(--mesh-y4),
        hsla(30, 100%, 55%, 0.08) 0%,
        transparent 70%
      ),
      radial-gradient(
        circle var(--mesh-size5) at var(--mesh-x5) var(--mesh-y5),
        hsla(120, 60%, 60%, 0.1) 0%,
        transparent 70%
      );

    background-color: hsl(220, 50%, 6%);
    animation: darkMeshFlow 20s ease-in-out infinite alternate-reverse;
  }

  .mesh-overlay {
    background: linear-gradient(
      135deg,
      hsla(220, 50%, 10%, 0.03) 0%,
      hsla(280, 30%, 20%, 0.02) 100%
    );
  }
}

// Floating Shapes
.floating-shapes {
  position: absolute;
  inset: 0;
  z-index: 1;
  pointer-events: none;
}

.float-shape {
  position: absolute;
  opacity: 0.3;
  animation: float 12s ease-in-out infinite;

  &.triangle {
    &.triangle-1 {
      width: 0;
      height: 0;
      border-left: 12px solid transparent;
      border-right: 12px solid transparent;
      top: 15%;
      left: 10%;
      animation-delay: 0s;
      animation-duration: 15s;
    }

    &.triangle-2 {
      width: 0;
      height: 0;
      border-left: 8px solid transparent;
      border-right: 8px solid transparent;
      top: 75%;
      right: 20%;
      animation-delay: 5s;
      animation-duration: 18s;
    }
  }

  &.circle {
    border-radius: 50%;

    &.circle-1 {
      width: 20px;
      height: 20px;
      top: 35%;
      right: 15%;
      animation-delay: 2s;
      animation-duration: 14s;
    }

    &.circle-2 {
      width: 16px;
      height: 16px;
      top: 60%;
      left: 25%;
      animation-delay: 7s;
      animation-duration: 16s;
    }
  }

  &.square {
    &.square-1 {
      width: 18px;
      height: 18px;
      top: 25%;
      right: 35%;
      animation-delay: 3s;
      animation-duration: 20s;
    }
  }

  &.hexagon {
    &.hexagon-1 {
      width: 20px;
      height: 11.55px;
      position: relative;
      top: 85%;
      left: 15%;
      animation-delay: 4s;
      animation-duration: 17s;

      &::before,
      &::after {
        content: "";
        position: absolute;
        width: 0;
        border-left: 10px solid transparent;
        border-right: 10px solid transparent;
      }

      &::before {
        bottom: 100%;
        border-bottom: 5.77px solid;
      }

      &::after {
        top: 100%;
        border-top: 5.77px solid;
      }
    }
  }
}

// Morphing Blobs
.morphing-blobs {
  position: absolute;
  inset: 0;
  z-index: 1;
  pointer-events: none;
}

.blob {
  position: absolute;
  border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
  opacity: 0.15;
  filter: blur(2px);
  animation: morphBlob 20s ease-in-out infinite;

  &.blob-1 {
    width: 200px;
    height: 150px;
    top: 10%;
    left: 80%;
    animation-delay: 0s;
    animation-duration: 25s;
  }

  &.blob-2 {
    width: 150px;
    height: 200px;
    bottom: 20%;
    left: 5%;
    animation-delay: 8s;
    animation-duration: 22s;
  }

  &.blob-3 {
    width: 180px;
    height: 120px;
    top: 50%;
    right: 10%;
    animation-delay: 15s;
    animation-duration: 28s;
  }
}

// Theme colors for shapes and blobs
.mesher-canvas.light {
  .float-shape {
    &.triangle {
      &.triangle-1 {
        border-bottom: 12px solid hsla(217, 100%, 50%, 0.4);
      }
      &.triangle-2 {
        border-bottom: 8px solid hsla(280, 60%, 50%, 0.4);
      }
    }

    &.circle {
      background: hsla(156, 100%, 45%, 0.4);
    }

    &.square {
      background: hsla(45, 100%, 65%, 0.4);
    }

    &.hexagon {
      background: hsla(200, 100%, 60%, 0.4);

      &::before,
      &::after {
        border-bottom-color: hsla(200, 100%, 60%, 0.4);
        border-top-color: hsla(200, 100%, 60%, 0.4);
      }
    }
  }

  .blob {
    &.blob-1 {
      background: hsla(217, 100%, 50%, 0.08);
    }
    &.blob-2 {
      background: hsla(156, 100%, 45%, 0.06);
    }
    &.blob-3 {
      background: hsla(280, 60%, 50%, 0.07);
    }
  }
}

.mesher-canvas.dark {
  .float-shape {
    &.triangle {
      &.triangle-1 {
        border-bottom: 12px solid hsla(217, 100%, 60%, 0.6);
      }
      &.triangle-2 {
        border-bottom: 8px solid hsla(280, 70%, 60%, 0.6);
      }
    }

    &.circle {
      background: hsla(180, 100%, 50%, 0.6);
    }

    &.square {
      background: hsla(30, 100%, 55%, 0.6);
    }

    &.hexagon {
      background: hsla(120, 60%, 60%, 0.6);

      &::before,
      &::after {
        border-bottom-color: hsla(120, 60%, 60%, 0.6);
        border-top-color: hsla(120, 60%, 60%, 0.6);
      }
    }
  }

  .blob {
    &.blob-1 {
      background: hsla(217, 100%, 60%, 0.12);
    }
    &.blob-2 {
      background: hsla(180, 100%, 50%, 0.1);
    }
    &.blob-3 {
      background: hsla(280, 70%, 60%, 0.08);
    }
  }
}

// Animations
@keyframes float {
  0%,
  100% {
    transform: translateY(0px) rotate(0deg);
  }
  33% {
    transform: translateY(-20px) rotate(120deg);
  }
  66% {
    transform: translateY(10px) rotate(240deg);
  }
}

@keyframes morphBlob {
  0%,
  100% {
    border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
    transform: translate(0, 0) scale(1);
  }
  25% {
    border-radius: 58% 42% 75% 25% / 76% 46% 54% 24%;
    transform: translate(30px, -50px) scale(1.1);
  }
  50% {
    border-radius: 50% 50% 33% 67% / 55% 27% 73% 45%;
    transform: translate(-20px, 20px) scale(0.9);
  }
  75% {
    border-radius: 33% 67% 58% 42% / 63% 68% 32% 37%;
    transform: translate(50px, 30px) scale(1.05);
  }
}

// Simplified mesh animations
@keyframes lightMeshFlow {
  0%,
  100% {
    --mesh-x1: 20%;
    --mesh-y1: 30%;
    --mesh-x2: 80%;
    --mesh-y2: 70%;
    --mesh-x3: 60%;
    --mesh-y3: 20%;
    --mesh-x4: 30%;
    --mesh-y4: 80%;
    --mesh-x5: 90%;
    --mesh-y5: 40%;
  }

  50% {
    --mesh-x1: 70%;
    --mesh-y1: 80%;
    --mesh-x2: 30%;
    --mesh-y2: 20%;
    --mesh-x3: 85%;
    --mesh-y3: 60%;
    --mesh-x4: 75%;
    --mesh-y4: 35%;
    --mesh-x5: 25%;
    --mesh-y5: 85%;
  }
}

@keyframes darkMeshFlow {
  0%,
  100% {
    --mesh-x1: 25%;
    --mesh-y1: 25%;
    --mesh-x2: 75%;
    --mesh-y2: 75%;
    --mesh-x3: 50%;
    --mesh-y3: 80%;
    --mesh-x4: 80%;
    --mesh-y4: 20%;
    --mesh-x5: 20%;
    --mesh-y5: 60%;
  }

  50% {
    --mesh-x1: 80%;
    --mesh-y1: 70%;
    --mesh-x2: 20%;
    --mesh-y2: 30%;
    --mesh-x3: 90%;
    --mesh-y3: 25%;
    --mesh-x4: 35%;
    --mesh-y4: 85%;
    --mesh-x5: 65%;
    --mesh-y5: 15%;
  }
}

// Performance optimizations
@media (prefers-reduced-motion: reduce) {
  .mesher-canvas {
    .mesh-background,
    .float-shape,
    .blob {
      animation: none !important;
    }
  }
}

// Mobile optimizations
@media (max-width: 768px) {
  :root {
    --mesh-size1: 60vw;
    --mesh-size2: 55vw;
    --mesh-size3: 50vw;
    --mesh-size4: 65vw;
    --mesh-size5: 58vw;
  }

  .mesher-canvas {
    .mesh-background {
      animation-duration: 35s !important;
    }
  }

  .float-shape {
    opacity: 0.2;
    transform: scale(0.8);
  }

  .blob {
    opacity: 0.1;
    transform: scale(0.7);
  }
}

// High contrast mode
@media (prefers-contrast: high) {
  .mesher-canvas {
    .mesh-background {
      opacity: 0.3;
    }

    .float-shape,
    .blob {
      opacity: 0.1;
    }

    &.light .mesh-background {
      background-color: hsl(0, 0%, 100%);
    }

    &.dark .mesh-background {
      background-color: hsl(0, 0%, 0%);
    }
  }
}

// Print styles
@media print {
  .mesher-canvas {
    display: none;
  }
}

// Focus and interaction states for accessibility
.mesher-canvas:focus-visible {
  outline: 2px solid transparent;
}
