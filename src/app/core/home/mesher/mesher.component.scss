$light-bg: #f0f0f3;
$dark-bg: #1a1a2e;
$neuro-bg: #e6e7ee;
$light-shadow: rgba(255, 255, 255, 0.7);
$dark-shadow: rgba(0, 0, 0, 0.3);
$blob-size: clamp(280px, 50vw, 500px);
$blur: 60px;

.mesher-container {
  position: relative;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  background: linear-gradient(135deg, $neuro-bg 0%, darken($neuro-bg, 5%) 100%);

  &.light {
    background: linear-gradient(
      135deg,
      $light-bg 0%,
      darken($light-bg, 3%) 100%
    );

    .neumorphic-blob {
      background: linear-gradient(
        145deg,
        lighten($light-bg, 2%),
        darken($light-bg, 3%)
      );
      box-shadow: 20px 20px $blur rgba(163, 177, 198, 0.4),
        -20px -20px $blur $light-shadow,
        inset 10px 10px 20px rgba(163, 177, 198, 0.2),
        inset -10px -10px 20px $light-shadow;
    }
  }

  &.dark {
    background: linear-gradient(
      135deg,
      $dark-bg 0%,
      lighten($dark-bg, 5%) 100%
    );

    .neumorphic-blob {
      background: linear-gradient(
        145deg,
        lighten($dark-bg, 8%),
        darken($dark-bg, 5%)
      );
      box-shadow: 20px 20px $blur $dark-shadow,
        -20px -20px $blur rgba(255, 255, 255, 0.1),
        inset 10px 10px 20px $dark-shadow,
        inset -10px -10px 20px rgba(255, 255, 255, 0.05);
    }
  }
}

.neumorphic-blob {
  position: absolute;
  width: $blob-size;
  height: $blob-size;
  background: linear-gradient(
    145deg,
    lighten($neuro-bg, 2%),
    darken($neuro-bg, 3%)
  );
  border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
  box-shadow: 20px 20px $blur rgba(163, 177, 198, 0.6),
    -20px -20px $blur $light-shadow,
    inset 10px 10px 20px rgba(163, 177, 198, 0.2),
    inset -10px -10px 20px rgba(255, 255, 255, 0.3);
  animation: morph 5s ease-in-out infinite;

  @media (min-width: 768px) {
    box-shadow: 30px 30px #{$blur + 20px} rgba(163, 177, 198, 0.6),
      -30px -30px #{$blur + 20px} $light-shadow,
      inset 15px 15px 30px rgba(163, 177, 198, 0.2),
      inset -15px -15px 30px rgba(255, 255, 255, 0.3);
  }
}

.content-overlay {
  position: relative;
  z-index: 10;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 2rem;
}

@keyframes morph {
  0%,
  100% {
    border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
    transform: rotate(0deg);
  }
  20% {
    border-radius: 40% 60% 70% 30% / 50% 60% 30% 60%;
    transform: rotate(72deg);
  }
  40% {
    border-radius: 70% 30% 50% 60% / 30% 50% 80% 60%;
    transform: rotate(144deg);
  }
  60% {
    border-radius: 30% 70% 60% 40% / 70% 40% 50% 80%;
    transform: rotate(216deg);
  }
  80% {
    border-radius: 50% 80% 40% 60% / 60% 70% 40% 50%;
    transform: rotate(288deg);
  }
}
