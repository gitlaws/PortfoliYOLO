// ===== PASTEL COLOR PALETTE =====
$pastel-colors: (
  lavender: #e6e6ff,
  peach: #ffd7d7,
  mint: #d7ffd7,
  sky: #d7f3ff,
  rose: #ffcce5,
  cream: #fff7d7,
  lilac: #f0d7ff,
  coral: #ffd7cc,
  sage: #d7ffcc,
  powder: #cce5ff,
  blush: #ffccdb,
  pearl: #f5f5dc,
);

// Enhanced pastel gradients for smooth transitions
$pastel-gradients: (
  sunset:
    linear-gradient(
      135deg,
      #ffd7d7 0%,
      #ffcce5 25%,
      #f0d7ff 50%,
      #e6e6ff 75%,
      #d7f3ff 100%
    ),
  spring:
    linear-gradient(
      135deg,
      #d7ffd7 0%,
      #d7ffcc 25%,
      #fff7d7 50%,
      #ffd7cc 75%,
      #ffccdb 100%
    ),
  ocean:
    linear-gradient(
      135deg,
      #d7f3ff 0%,
      #cce5ff 25%,
      #d7ffd7 50%,
      #d7ffcc 75%,
      #f5f5dc 100%
    ),
  dream:
    linear-gradient(
      135deg,
      #e6e6ff 0%,
      #f0d7ff 20%,
      #ffcce5 40%,
      #ffd7d7 60%,
      #fff7d7 80%,
      #d7f3ff 100%
    ),
);

// Mesh-specific variables
$mesh-opacity: 0.8;
$mesh-blur: 60px;
$point-size: 200px;
$animation-duration: 20s;
$morph-duration: 15s;

// Performance variables
$high-performance-blur: 80px;
$medium-performance-blur: 60px;
$low-performance-blur: 40px;

// Responsive breakpoints
$breakpoints: (
  mobile: 480px,
  tablet: 768px,
  laptop: 1024px,
  desktop: 1200px,
  ultrawide: 1600px,
);

// ===== MIXINS =====
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }
}

@mixin pastel-gradient($name: dream) {
  background: map-get($pastel-gradients, $name);
}

@mixin mesh-blur($level: medium) {
  @if $level == high {
    filter: blur($high-performance-blur);
  } @else if $level == medium {
    filter: blur($medium-performance-blur);
  } @else {
    filter: blur($low-performance-blur);
  }
}

@mixin seamless-animation($duration: $animation-duration) {
  animation-duration: $duration;
  animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  animation-iteration-count: infinite;
  animation-fill-mode: both;
}

// ===== MAIN CONTAINER =====
.animated-mesh-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: -1;
  overflow: hidden;
  pointer-events: none;
  opacity: 0;
  transition: opacity 1.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  contain: layout style paint;
  background: linear-gradient(135deg, #fafafa 0%, #f0f0f0 100%);

  &.active {
    opacity: 1;
    pointer-events: auto;
  }

  // Intensity levels
  &[data-intensity="low"] {
    --mesh-opacity: 0.3;
    --animation-speed: 0.5;
  }
  &[data-intensity="medium"] {
    --mesh-opacity: 0.6;
    --animation-speed: 1;
  }
  &[data-intensity="high"] {
    --mesh-opacity: 0.8;
    --animation-speed: 1.5;
  }
  &[data-intensity="ultra"] {
    --mesh-opacity: 1;
    --animation-speed: 2;
  }
}

// ===== MESH CANVAS =====
.mesh-canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: block;
  opacity: var(--mesh-opacity, 0.8);
  mix-blend-mode: normal;
  @include mesh-blur(medium);

  @include respond-to(laptop) {
    @include mesh-blur(medium);
  }

  @include respond-to(tablet) {
    @include mesh-blur(low);
    opacity: calc(var(--mesh-opacity, 0.8) * 0.8);
  }

  @include respond-to(mobile) {
    @include mesh-blur(low);
    opacity: calc(var(--mesh-opacity, 0.8) * 0.6);
  }
}

// ===== COLOR POINTS DEBUG =====
.color-points-debug {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 10;
}

.color-point-debug {
  position: absolute;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  transform: translate(-50%, -50%);
  border: 2px solid rgba(255, 255, 255, 0.8);
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 10px;
  font-weight: bold;
  color: rgba(0, 0, 0, 0.7);
  font-family: monospace;
  z-index: 100;
}

// ===== GRADIENT OVERLAY LAYERS =====
.gradient-layers {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1;
}

.gradient-layer {
  position: absolute;
  width: 120%;
  height: 120%;
  border-radius: 50%;
  opacity: 0.15;

  &.primary-layer {
    top: -10%;
    left: -10%;
    @include pastel-gradient(sunset);
    @include seamless-animation(25s);
    animation-name: gradientDrift1;
  }

  &.secondary-layer {
    bottom: -10%;
    right: -10%;
    @include pastel-gradient(spring);
    @include seamless-animation(30s);
    animation-name: gradientDrift2;
  }

  &.accent-layer {
    top: 20%;
    left: 20%;
    width: 80%;
    height: 80%;
    @include pastel-gradient(ocean);
    @include seamless-animation(35s);
    animation-name: gradientPulse;
  }
}

// ===== LOADING STATE =====
.mesh-loading {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 10;

  .loading-gradient {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 15px;
    flex-wrap: wrap;
    width: 200px;
    height: 100px;
  }

  .loading-point {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    opacity: 0.7;
    @include seamless-animation(2s);
    animation-name: loadingPulse;

    &:nth-child(1) {
      background: map-get($pastel-colors, lavender);
      animation-delay: 0s;
    }
    &:nth-child(2) {
      background: map-get($pastel-colors, peach);
      animation-delay: 0.2s;
    }
    &:nth-child(3) {
      background: map-get($pastel-colors, mint);
      animation-delay: 0.4s;
    }
    &:nth-child(4) {
      background: map-get($pastel-colors, sky);
      animation-delay: 0.6s;
    }
    &:nth-child(5) {
      background: map-get($pastel-colors, rose);
      animation-delay: 0.8s;
    }
    &:nth-child(6) {
      background: map-get($pastel-colors, cream);
      animation-delay: 1s;
    }
  }
}

// ===== ENHANCED DEBUG PANEL =====
.mesh-debug {
  position: absolute;
  top: 20px;
  right: 20px;
  padding: 16px;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(20px) saturate(180%);
  border-radius: 12px;
  border: 1px solid rgba(255, 255, 255, 0.3);
  font-family: "SF Mono", "Monaco", "Cascadia Code", monospace;
  font-size: 11px;
  color: rgba(0, 0, 0, 0.8);
  z-index: 100;
  min-width: 220px;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);

  .debug-panel {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .debug-section {
    h4 {
      color: rgba(139, 92, 246, 0.9);
      margin: 0 0 6px 0;
      font-size: 10px;
      text-transform: uppercase;
      letter-spacing: 1px;
      font-weight: 600;
    }

    span {
      display: block;
      margin-bottom: 3px;
      color: rgba(0, 0, 0, 0.7);
      font-size: 10px;
    }
  }

  @include respond-to(mobile) {
    display: none;
  }
}

// ===== SEAMLESS ANIMATIONS =====
@keyframes gradientDrift1 {
  0%,
  100% {
    transform: translate(0, 0) rotate(0deg) scale(1);
    opacity: 0.15;
  }
  25% {
    transform: translate(50px, -30px) rotate(90deg) scale(1.1);
    opacity: 0.12;
  }
  50% {
    transform: translate(-30px, -60px) rotate(180deg) scale(0.9);
    opacity: 0.18;
  }
  75% {
    transform: translate(-60px, 40px) rotate(270deg) scale(1.05);
    opacity: 0.1;
  }
}

@keyframes gradientDrift2 {
  0%,
  100% {
    transform: translate(0, 0) rotate(0deg) scale(1);
    opacity: 0.15;
  }
  33% {
    transform: translate(-40px, 50px) rotate(120deg) scale(1.15);
    opacity: 0.12;
  }
  66% {
    transform: translate(60px, -20px) rotate(240deg) scale(0.85);
    opacity: 0.2;
  }
}

@keyframes gradientPulse {
  0%,
  100% {
    transform: scale(1) rotate(0deg);
    opacity: 0.15;
  }
  50% {
    transform: scale(1.3) rotate(180deg);
    opacity: 0.08;
  }
}

@keyframes loadingPulse {
  0%,
  100% {
    transform: scale(1);
    opacity: 0.7;
  }
  50% {
    transform: scale(1.3);
    opacity: 0.3;
  }
}

@keyframes meshColorFlow {
  0% {
    opacity: 0.8;
  }
  25% {
    opacity: 0.6;
  }
  50% {
    opacity: 0.9;
  }
  75% {
    opacity: 0.4;
  }
  100% {
    opacity: 0.8;
  }
}

@keyframes dreamyFloat {
  0%,
  100% {
    transform: translate(0px, 0px) rotate(0deg);
  }
  25% {
    transform: translate(20px, -15px) rotate(2deg);
  }
  50% {
    transform: translate(-10px, -25px) rotate(-1deg);
  }
  75% {
    transform: translate(-25px, 10px) rotate(1deg);
  }
}

// ===== RESPONSIVE OPTIMIZATIONS =====
@include respond-to(ultrawide) {
  .animated-mesh-container[data-performance="high"] {
    .mesh-canvas {
      @include mesh-blur(high);
    }
  }
}

@include respond-to(laptop) {
  .gradient-layer {
    animation-duration: 20s !important;
  }
}

@include respond-to(tablet) {
  .gradient-layer {
    animation-duration: 15s !important;
    opacity: 0.12 !important;

    &.accent-layer {
      display: none;
    }
  }

  .mesh-canvas {
    filter: blur(40px);
  }
}

@include respond-to(mobile) {
  .gradient-layer {
    animation-duration: 10s !important;
    opacity: 0.08 !important;

    &.secondary-layer,
    &.accent-layer {
      display: none;
    }
  }

  .mesh-canvas {
    filter: blur(30px);
    opacity: 0.4;
  }
}

// ===== ACCESSIBILITY & PERFORMANCE =====
@media (prefers-reduced-motion: reduce) {
  .gradient-layer,
  .loading-point {
    animation: none !important;
    transform: none !important;
  }

  .mesh-canvas {
    filter: blur(20px);
  }
}

@media (prefers-contrast: high) {
  .animated-mesh-container {
    .mesh-canvas {
      opacity: 0.2 !important;
      filter: contrast(150%) blur(30px);
    }
  }
}

// ===== THEME VARIANTS =====
.animated-mesh-container {
  &[data-theme="minimal"] {
    .mesh-canvas {
      opacity: 0.3 !important;
      filter: blur(80px);
    }
    .gradient-layer {
      opacity: 0.05 !important;
    }
  }

  &[data-theme="vibrant"] {
    .mesh-canvas {
      opacity: 1 !important;
      filter: blur(40px) saturate(150%);
    }
    .gradient-layer {
      opacity: 0.25 !important;
    }
  }

  &[data-theme="dark"] {
    background: linear-gradient(135deg, #1a1a1a 0%, #2a2a2a 100%);

    .gradient-layer {
      mix-blend-mode: screen;
      opacity: 0.08 !important;
    }
  }
}

// ===== PERFORMANCE MODE OPTIMIZATIONS =====
.animated-mesh-container {
  &[data-performance="low"] {
    .gradient-layer:not(.primary-layer) {
      display: none;
    }

    .mesh-canvas {
      filter: blur(20px);
    }
  }

  &[data-performance="medium"] {
    .gradient-layer.accent-layer {
      display: none;
    }
  }

  &[data-performance="high"] {
    .mesh-canvas {
      @include mesh-blur(high);
    }
  }
}
