// ===== VARIABLES =====
// Colors
$primary-color: #6366f1;
$primary-light: #818cf8;
$primary-dark: #4f46e5;
$secondary-color: #8b5cf6;
$secondary-light: #a78bfa;
$secondary-dark: #7c3aed;
$accent-color: #3b82f6;
$accent-light: #60a5fa;
$accent-dark: #2563eb;

// Blob-specific colors
$blob-primary: rgba($primary-color, 0.15);
$blob-secondary: rgba($secondary-color, 0.12);
$blob-accent: rgba($accent-color, 0.08);
$blob-glow: rgba($primary-light, 0.3);

// Opacity levels
$opacity-subtle: 0.03;
$opacity-light: 0.08;
$opacity-medium: 0.15;
$opacity-strong: 0.25;
$opacity-visible: 0.4;
$opacity-prominent: 0.6;

// Breakpoints
$mobile: 480px;
$tablet: 768px;
$laptop: 1024px;
$desktop: 1200px;

// Timing
$transition-fast: 0.15s;
$transition-normal: 0.3s;
$transition-slow: 0.8s;
$morph-slow: 8s;
$morph-medium: 12s;
$morph-fast: 6s;

// Blob sizes
$blob-size-sm: 80px;
$blob-size-md: 120px;
$blob-size-lg: 180px;
$blob-size-xl: 240px;

// Blur levels
$blur-subtle: 20px;
$blur-medium: 40px;
$blur-strong: 60px;

// Z-index
$z-background: -1;

// ===== MIXINS =====
@mixin respond-to($breakpoint) {
  @if $breakpoint == mobile {
    @media (max-width: $mobile) {
      @content;
    }
  } @else if $breakpoint == tablet {
    @media (max-width: $tablet) {
      @content;
    }
  } @else if $breakpoint == laptop {
    @media (max-width: $laptop) {
      @content;
    }
  } @else if $breakpoint == desktop {
    @media (max-width: $desktop) {
      @content;
    }
  }
}

@mixin blob-base($size: $blob-size-md, $blur: $blur-medium) {
  position: absolute;
  width: $size;
  height: $size;
  border-radius: 50%;
  filter: blur($blur);
  will-change: transform, opacity;
  transform-origin: center center;
}

@mixin blob-morph-animation($duration: $morph-medium) {
  animation: blobMorph $duration ease-in-out infinite;
}

@mixin gradient-overlay($color1, $color2, $opacity1: 0.1, $opacity2: 0.05) {
  background: radial-gradient(
    circle at center,
    rgba($color1, $opacity1) 0%,
    rgba($color2, $opacity2) 50%,
    transparent 100%
  );
}

@mixin glass-effect($opacity: 0.1) {
  background: rgba(255, 255, 255, $opacity);
  backdrop-filter: blur(10px) saturate(180%);
  -webkit-backdrop-filter: blur(10px) saturate(180%);
}

// ===== MAIN STYLES =====
.blob-mesher-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: $z-background;
  overflow: hidden;
  pointer-events: none;
  opacity: 0;
  transition: opacity $transition-slow cubic-bezier(0.4, 0, 0.2, 1);
  contain: layout style paint;

  &.active {
    opacity: 1;
    pointer-events: auto;
  }

  @media (prefers-reduced-motion: reduce) {
    .blob,
    .gradient-overlays > div {
      animation: none !important;
    }
  }
}

.blob-canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: block;
  opacity: 0.6;
  mix-blend-mode: multiply;

  @include respond-to(tablet) {
    opacity: 0.4;
  }

  @include respond-to(mobile) {
    opacity: 0.3;
  }
}

.blob-layers {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  mix-blend-mode: normal;
}

.blob {
  @include blob-base();
  @include blob-morph-animation();

  &::before {
    content: "";
    position: absolute;
    top: -20%;
    left: -20%;
    width: 140%;
    height: 140%;
    border-radius: 50%;
    opacity: 0.3;
    filter: blur($blur-subtle);
    animation: blobGlow 4s ease-in-out infinite alternate;
  }

  &::after {
    content: "";
    position: absolute;
    top: 10%;
    left: 10%;
    width: 80%;
    height: 80%;
    border-radius: 50%;
    opacity: 0.8;
    filter: blur($blur-subtle / 2);
    mix-blend-mode: overlay;
  }

  // Performance optimization for mobile
  @include respond-to(mobile) {
    &::before,
    &::after {
      display: none;
    }
  }
}

.primary-blob {
  background: $blob-primary;
  @include blob-morph-animation($morph-slow);

  &::before {
    background: $blob-glow;
  }

  &::after {
    background: rgba($primary-light, 0.2);
  }

  &:nth-child(odd) {
    animation-direction: reverse;
  }

  &:nth-child(3n) {
    @include blob-base($blob-size-lg, $blur-strong);
    animation-duration: #{$morph-slow + 2s};
  }
}

.secondary-blob {
  background: $blob-secondary;
  @include blob-morph-animation($morph-medium);

  &::before {
    background: rgba($secondary-light, 0.3);
  }

  &::after {
    background: rgba($secondary-color, 0.15);
  }

  &:nth-child(even) {
    animation-direction: reverse;
    animation-timing-function: ease-out;
  }

  &:nth-child(2n) {
    @include blob-base($blob-size-sm, $blur-medium);
  }
}

.accent-blob {
  background: $blob-accent;
  @include blob-morph-animation($morph-fast);

  &::before {
    background: rgba($accent-light, 0.25);
  }

  &::after {
    background: rgba($accent-color, 0.1);
  }

  &:nth-child(4n) {
    @include blob-base($blob-size-xl, $blur-strong);
    animation-duration: #{$morph-fast + 4s};
  }
}

.gradient-overlays {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  mix-blend-mode: soft-light;

  .gradient-primary {
    position: absolute;
    top: -20%;
    left: -20%;
    width: 140%;
    height: 140%;
    @include gradient-overlay($primary-color, $secondary-color);
    animation: gradientFloat 15s ease-in-out infinite;
  }

  .gradient-secondary {
    position: absolute;
    bottom: -20%;
    right: -20%;
    width: 120%;
    height: 120%;
    @include gradient-overlay($accent-color, $primary-color, 0.08, 0.03);
    animation: gradientFloat 18s ease-in-out infinite reverse;
  }

  .gradient-accent {
    position: absolute;
    top: 30%;
    left: 30%;
    width: 80%;
    height: 80%;
    @include gradient-overlay($secondary-color, $accent-color, 0.06, 0.02);
    animation: gradientPulse 20s ease-in-out infinite;
  }
}

.mesher-loading {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 10;

  .loading-blob {
    @include blob-base($blob-size-md, $blur-medium);
    background: $blob-primary;
    animation: loadingMorph 2s ease-in-out infinite;
  }
}

.mesher-debug {
  position: absolute;
  top: 20px;
  right: 20px;
  padding: 12px 16px;
  @include glass-effect(0.15);
  border-radius: 8px;
  font-family: "Courier New", monospace;
  font-size: 12px;
  color: rgba(255, 255, 255, 0.9);
  z-index: 100;

  .debug-stats {
    display: flex;
    flex-direction: column;
    gap: 4px;

    span {
      white-space: nowrap;
    }
  }

  @include respond-to(mobile) {
    display: none;
  }
}

// ===== ANIMATIONS =====
@keyframes blobMorph {
  0%,
  100% {
    border-radius: 50% 45% 55% 40% / 45% 50% 40% 55%;
    transform: rotate(0deg) scale(1);
  }
  25% {
    border-radius: 40% 60% 45% 55% / 50% 45% 60% 40%;
    transform: rotate(90deg) scale(1.1);
  }
  50% {
    border-radius: 55% 40% 50% 45% / 55% 40% 45% 60%;
    transform: rotate(180deg) scale(0.9);
  }
  75% {
    border-radius: 45% 55% 40% 50% / 40% 55% 50% 45%;
    transform: rotate(270deg) scale(1.05);
  }
}

@keyframes blobGlow {
  0% {
    opacity: 0.2;
    transform: scale(0.8);
  }
  50% {
    opacity: 0.4;
    transform: scale(1.2);
  }
  100% {
    opacity: 0.2;
    transform: scale(0.8);
  }
}

@keyframes gradientFloat {
  0%,
  100% {
    transform: translate(0, 0) rotate(0deg);
    opacity: 0.8;
  }
  33% {
    transform: translate(30px, -20px) rotate(120deg);
    opacity: 0.6;
  }
  66% {
    transform: translate(-20px, 30px) rotate(240deg);
    opacity: 0.9;
  }
}

@keyframes gradientPulse {
  0%,
  100% {
    transform: scale(1);
    opacity: 0.6;
  }
  50% {
    transform: scale(1.2);
    opacity: 0.3;
  }
}

@keyframes loadingMorph {
  0%,
  100% {
    border-radius: 50%;
    transform: rotate(0deg) scale(1);
  }
  50% {
    border-radius: 30% 70% 40% 60% / 50% 30% 70% 50%;
    transform: rotate(180deg) scale(1.2);
  }
}

// ===== RESPONSIVE OPTIMIZATIONS =====
@include respond-to(laptop) {
  .blob:nth-child(n + 8) {
    display: none;
  }
}

@include respond-to(tablet) {
  .blob:nth-child(n + 6) {
    display: none;
  }

  .blob {
    filter: blur($blur-medium);
  }
}

@include respond-to(mobile) {
  .blob:nth-child(n + 4) {
    display: none;
  }

  .blob {
    filter: blur($blur-subtle);
    animation-duration: 8s !important;
  }

  .gradient-overlays {
    opacity: 0.5;
  }
}

// ===== ACCESSIBILITY & PERFORMANCE =====
@media (prefers-contrast: high) {
  .blob-mesher-container {
    .blob {
      opacity: 0.8;
      filter: contrast(1.5) blur($blur-subtle);
    }
  }
}

@media (prefers-reduced-motion: reduce) {
  .blob {
    animation: none !important;
    transform: none !important;
  }

  .gradient-overlays > div {
    animation: none !important;
  }
}

// Dark mode enhancements
@media (prefers-color-scheme: dark) {
  .blob-mesher-container {
    .primary-blob {
      background: rgba($primary-light, 0.2);
    }

    .secondary-blob {
      background: rgba($secondary-light, 0.18);
    }

    .accent-blob {
      background: rgba($accent-light, 0.15);
    }
  }
}

// Performance mode variants
.blob-mesher-container {
  &[data-performance="low"] {
    .blob:nth-child(n + 3) {
      display: none;
    }

    .blob {
      animation-duration: 10s !important;
      filter: blur($blur-subtle);

      &::before,
      &::after {
        display: none;
      }
    }

    .gradient-overlays {
      opacity: 0.3;
    }
  }

  &[data-theme="minimal"] {
    .blob {
      opacity: 0.3;
    }

    .gradient-overlays {
      opacity: 0.2;
    }
  }

  &[data-theme="vibrant"] {
    .blob {
      opacity: 0.8;
      filter: blur($blur-medium) saturate(150%);
    }

    .gradient-overlays {
      opacity: 0.9;
    }
  }
}
